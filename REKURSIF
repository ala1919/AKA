package main

import (
	"fmt"
	"time"
)

// Fungsi untuk melakukan pengurutan menggunakan metode Insertion Sort Rekursif
func insertionSortRecursive(arr []int, n int) {
	if n <= 1 {
		return
	}

	// Sortir elemen pertama n-1
	insertionSortRecursive(arr, n-1)

	// Sisipkan elemen terakhir pada posisi yang benar
	last := arr[n-1]
	j := n - 2
	for j >= 0 && arr[j] > last {
		arr[j+1] = arr[j]
		j--
	}
	arr[j+1] = last
}

// Fungsi untuk menemukan nilai minimum dan maksimum secara rekursif
func findMinMaxRecursive(arr []int, n int, min, max int) (int, int) {
	if n == 0 {
		return min, max
	}
	if arr[n-1] < min {
		min = arr[n-1]
	}
	if arr[n-1] > max {
		max = arr[n-1]
	}
	return findMinMaxRecursive(arr, n-1, min, max)
}

func main() {
	// Menggunakan metode rekursif untuk pengurutan dan pencarian min dan max
	for {
		var n int
		fmt.Print("Masukkan jumlah elemen: ")
		_, err := fmt.Scan(&n)
		if err != nil || n <= 0 {
			fmt.Println("Input tidak valid. Harap masukkan angka positif.")
			continue
		}

		arr := make([]int, n)
		fmt.Println("Masukkan elemen array:")

		// Meminta input untuk elemen array dan memastikan input adalah angka
		for i := 0; i < n; i++ {
			var element int
			_, err := fmt.Scan(&element)
			if err != nil {
				// Jika input tidak valid, meminta ulang input
				fmt.Println("Input tidak valid. Pastikan Anda hanya memasukkan angka.")
				i-- // Mengulang input untuk elemen yang salah
				continue
			}
			arr[i] = element
		}

		// Menampilkan array sebelum diurutkan
		fmt.Println("Array sebelum diurutkan:", arr)

		// Mengurutkan array secara rekursif
		start := time.Now()
		insertionSortRecursive(arr, n)
		elapsed := time.Since(start)

		// Menampilkan hasil pengurutan rekursif
		fmt.Println("Array setelah diurutkan (Rekursif):", arr)
		fmt.Printf("Waktu eksekusi Rekursif: %v\n", elapsed)

		// Menemukan nilai min dan max secara rekursif
		minRecursive, maxRecursive := findMinMaxRecursive(arr, n, arr[0], arr[0])
		fmt.Printf("Nilai minimum: %d, Nilai maksimum: %d\n", minRecursive, maxRecursive)
		fmt.Printf("Jumlah: %d\n", minRecursive+maxRecursive)
	}
}
